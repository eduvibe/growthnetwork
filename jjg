
        body {
            font-family: 'Poppins', sans-serif;
        }

        .neumorphic {
            box-shadow: 8px 8px 16px #b3b3b3, -8px -8px 16px #ffffff;
            border-radius: 12px;
            padding: 16px;
            background: #f0f0f3;
            transition: all 0.3s ease;
        }

        .neumorphic:hover {
            box-shadow: 12px 12px 20px #a3a3a3, -12px -12px 20px #ffffff;
        }

        .neumorphic-inset {
            box-shadow: inset 8px 8px 16px #b3b3b3, inset -8px -8px 16px #ffffff;
            border-radius: 12px;
            padding: 16px;
            background: #f0f0f3;
        }

        .dark-mode .neumorphic, .dark-mode .neumorphic-inset {
            box-shadow: 8px 8px 16px #2a2a2a, -8px -8px 16px #404040;
            background: #303030;
        }

        .dark-mode .neumorphic:hover {
            box-shadow: 12px 12px 20px #1a1a1a, -12px -12px 20px #505050;
        }

        #canvas-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            opacity: 0.1;
        }

        .glassmorphism {
            background: rgba(255, 255, 255, 0.25);
            box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
            backdrop-filter: blur(4px);
            -webkit-backdrop-filter: blur(4px);
            border-radius: 10px;
            border: 1px solid rgba(255, 255, 255, 0.18);
        }

        .dark-mode .glassmorphism {
            background: rgba(0, 0, 0, 0.25);
            box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
        }

        .animate-float {
            animation: float 6s ease-in-out infinite;
        }

        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-20px); }
            100% { transform: translateY(0px); }
        }

        .custom-scrollbar::-webkit-scrollbar {
            width: 8px;
        }

        .custom-scrollbar::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        .custom-scrollbar::-webkit-scrollbar-thumb {
            background: #888;
            border-radius: 4px;
        }

        .custom-scrollbar::-webkit-scrollbar-thumb:hover {
            background: #555;
        }
    </style>
</head>
<body class="bg-gray-100 dark:bg-gray-900 transition-colors duration-300 custom-scrollbar">
    <div id="canvas-container"></div>

    <!-- Header -->
    <header class="flex items-center justify-between p-4 bg-white dark:bg-gray-800 shadow-md sticky top-0 z-50 glassmorphism">
        <div class="flex items-center space-x-2">
            <lottie-player src="https://assets5.lottiefiles.com/packages/lf20_kkflmtur.json" background="transparent" speed="1" style="width: 50px; height: 50px;" loop autoplay></lottie-player>
            <h1 class="text-2xl font-bold dark:text-white">ThriveLink</h1>
        </div>
        <div class="flex items-center space-x-4">
            <input type="text" placeholder="Search..." class="px-4 py-2 rounded-full bg-gray-100 dark:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:text-white">
            <button id="darkModeToggle" class="focus:outline-none p-2 rounded-full neumorphic" aria-label="Toggle Dark Mode">
                <img id="darkModeIcon" src="https://img.icons8.com/ios-filled/50/000000/sun--v1.png" alt="Dark Mode Toggle" class="w-6 h-6">
            </button>
        </div>
    </header>

    <!-- Main Content -->
    <div class="container mx-auto px-4 py-8">
        <div class="grid grid-cols-5 gap-4">
            <!-- Left Sidebar -->
            <aside class="col-span-1">
                <!-- Trending Topics -->
                <div class="neumorphic mb-4 p-4 animate-float">
                    <h2 class="text-xl font-semibold mb-2 dark:text-white">Trending Topics</h2>
                    <ul id="trendingTopics" class="space-y-2">
                        <li class="dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 transition-colors duration-300 cursor-pointer">#AI2024</li>
                        <li class="dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 transition-colors duration-300 cursor-pointer">#ClimateAction</li>
                        <li class="dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 transition-colors duration-300 cursor-pointer">#Web3Revolution</li>
                        <li class="dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 transition-colors duration-300 cursor-pointer">#MentalHealthMatters</li>
                        <li class="dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 transition-colors duration-300 cursor-pointer">#MarsColony</li>
                    </ul>
                </div>

                <!-- Categories -->
                <div class="neumorphic p-4">
                    <h2 class="text-xl font-semibold mb-2 dark:text-white">Categories</h2>
                    <div id="categories" class="flex flex-wrap gap-2">
                        <span class="px-3 py-1 bg-blue-500 text-white rounded-full text-sm cursor-pointer hover:bg-blue-600 transition-colors duration-300">Technology</span>
                        <span class="px-3 py-1 bg-green-500 text-white rounded-full text-sm cursor-pointer hover:bg-green-600 transition-colors duration-300">Environment</span>
                        <span class="px-3 py-1 bg-yellow-500 text-white rounded-full text-sm cursor-pointer hover:bg-yellow-600 transition-colors duration-300">Education</span>
                        <span class="px-3 py-1 bg-red-500 text-white rounded-full text-sm cursor-pointer hover:bg-red-600 transition-colors duration-300">Health</span>
                        <span class="px-3 py-1 bg-purple-500 text-white rounded-full text-sm cursor-pointer hover:bg-purple-600 transition-colors duration-300">Space</span>
                    </div>
                </div>
            </aside>

            <!-- Main Feed -->
            <main class="col-span-3">
                <!-- Active Members -->
                <div class="neumorphic p-4 mb-4 flex items-center justify-between">
                    <div class="flex items-center space-x-2">
                        <lottie-player src="https://assets9.lottiefiles.com/packages/lf20_VxYRxH.json" background="transparent" speed="1" style="width: 50px; height: 50px;" loop autoplay></lottie-player>
                        <span id="activeUsers" class="dark:text-gray-300">32 members online</span>
                    </div>
                </div>

                <!-- Categories and Post Input -->
                <div class="neumorphic p-4 mb-4">
                    <div class="flex items-center justify-between mb-4">
                        <div class="flex space-x-2 overflow-x-auto">
                            <button class="px-3 py-1 bg-gray-200 dark:bg-gray-700 rounded-full dark:text-white hover:bg-blue-500 hover:text-white transition-colors duration-300">Technology</button>
                            <button class="px-3 py-1 bg-gray-200 dark:bg-gray-700 rounded-full dark:text-white hover:bg-blue-500 hover:text-white transition-colors duration-300">Health</button>
                            <button class="px-3 py-1 bg-gray-200 dark:bg-gray-700 rounded-full dark:text-white hover:bg-blue-500 hover:text-white transition-colors duration-300">Space</button>
                            <button class="px-3 py-1 bg-gray-200 dark:bg-gray-700 rounded-full dark:text-white hover:bg-blue-500 hover:text-white transition-colors duration-300">Education</button>
                        </div>
                    </div>
                    <div id="postInputArea" class="mt-4">
                        <textarea id="newPostInput" rows="3" placeholder="What's on your mind?" class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none"></textarea>
                        <div class="flex justify-between items-center mt-2">
                            <div class="flex space-x-2">
                                <button class="text-gray-500 hover:text-blue-500 transition-colors duration-300">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                    </svg>
                                </button>
                                <button class="text-gray-500 hover:text-blue-500 transition-colors duration-300">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                                    </svg>
                                </button>
                                <button class="text-gray-500 hover:text-blue-500 transition-colors duration-300">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                                    </svg>
                                </button>
                            </div>
                            <button id="submitPostBtn" class="px-4 py-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition-colors duration-300">Post</button>
                        </div>
                    </div>
                </div>

                <!-- Posts -->
                <div id="posts" class="space-y-4">
                    <!-- Posts will be dynamically populated here -->
                </div>

                <!-- Load More Button -->
                <div class="text-center mt-4">
                    <button id="loadMoreBtn" class="px-4 py-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition-colors duration-300">Load more posts</button>
                </div>
            </main>

            <!-- Right Sidebar -->
            <aside class="col-span-1">
                <div class="neumorphic p-4">
                    <h2 class="text-xl font-semibold mb-2 dark:text-white">To-Do List</h2>
                    <div class="flex space-x-2 mb-4">
                        <input type="text" id="newTodoInput" placeholder="Add a new task" class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <button id="addTodoBtn" class="px-4 py-2 bg-green-500 text-white rounded-full hover:bg-green-600 transition-colors duration-300">Add</button>
                    </div>
                    <ul id="todoList" class="space-y-2">
                        <li class="dark:text-gray-300 flex items-center justify-between">
                            <span>Prepare presentation for Monday</span>
                            <button class="text-red-500 hover:text-red-600 transition-colors duration-300">❌</button>
                        </li>
                        <li class="dark:text-gray-300 flex items-center justify-between">
                            <span>Review the space project draft</span>
                            <button class="text-red-500 hover:text-red-600 transition-colors duration-300">❌</button>
                        </li>
                        <li class="dark:text-gray-300 flex items-center justify-between">
                            <span>Complete the online AI course</span>
                            <button class="text-red-500 hover:text-red-600 transition-colors duration-300">❌</button>
                        </li>
                    </ul>
                </div>
            </aside>
        </div>
    </div>

    <!-- Comment Modal -->
    <div id="commentModal" class="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-75 hidden">
        <div class="neumorphic p-6 w-96">
            <h2 class="text-xl font-semibold dark:text-white mb-2">Add a Comment</h2>
            <textarea id="commentInput" rows="4" class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Write your comment here..."></textarea>
            <div class="flex justify-end space-x-2 mt-4">
                <button id="closeCommentModal" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-full hover:bg-gray-400 transition-colors duration-300">Cancel</button>
                <button id="submitCommentBtn" class="px-4 py-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition-colors duration-300">Submit</button>
            </div>
        </div>
    </div>

    <script>
        // Dark Mode Toggle
        const darkModeToggle = document.getElementById('darkModeToggle');
        const darkModeIcon = document.getElementById('darkModeIcon');
        darkModeToggle.addEventListener('click', () => {
            document.body.classList.toggle('dark-mode');
            darkModeIcon.src = document.body.classList.contains('dark-mode') 
                ? 'https://img.icons8.com/ios-filled/50/ffffff/moon-satellite.png' 
                : 'https://img.icons8.com/ios-filled/50/000000/sun--v1.png';
        });

        // Local Storage for Dark Mode
        document.addEventListener('DOMContentLoaded', () => {
            if (localStorage.getItem('dark-mode') === 'enabled') {
                document.body.classList.add('dark-mode');
                darkModeIcon.src = 'https://img.icons8.com/ios-filled/50/ffffff/moon-satellite.png';
            }
        });

        darkModeToggle.addEventListener('click', () => {
            document.body.classList.toggle('dark-mode');
            if (document.body.classList.contains('dark-mode')) {
                darkModeIcon.src = 'https://img.icons8.com/ios-filled/50/ffffff/moon-satellite.png';
                localStorage.setItem('dark-mode', 'enabled');
            } else {
                darkModeIcon.src = 'https://img.icons8.com/ios-filled/50/000000/sun--v1.png';
                localStorage.setItem('dark-mode', 'disabled');
            }
        });

        // Add To-Do Task
        const addTodoButton = document.getElementById('addTodoBtn');
        const newTodoInput = document.getElementById('newTodoInput');
        const todoList = document.getElementById('todoList');
        addTodoButton.addEventListener('click', () => {
            if (newTodoInput.value.trim()) {
                const li = document.createElement('li');
                li.className = 'dark:text-gray-300 flex items-center justify-between';
                li.innerHTML = `
                    <span>${newTodoInput.value.trim()}</span>
                    <button class="text-red-500 hover:text-red-600 transition-colors duration-300">❌</button>
                `;
                todoList.appendChild(li);
                newTodoInput.value = '';
            }
        });

        // Allow adding task with Enter key
        newTodoInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') addTodoButton.click();
        });

        // Handle task deletion
        todoList.addEventListener('click', (e) => {
            if (e.target.tagName === 'BUTTON') {
                e.target.parentElement.remove();
            }
        });

        // Dummy Data for Posts
        const posts = [
            { author: 'Jane Doe', content: 'AI is going to revolutionize the tech industry. What are your thoughts on the ethical implications?', avatar: 'https://picsum.photos/id/1005/50', likes: 120, comments: 45, shares: 10 },
            { author: 'John Smith', content: 'Just published my latest blog on space exploration! Check it out and let me know what you think about the future of interplanetary travel.', avatar: 'https://picsum.photos/id/1006/50', likes: 75, comments: 15, shares: 5 },
            { author: 'Alice Johnson', content: `Mental health is just as important as physical health. Today, let's talk about stress management techniques that work for you!`, avatar: 'https://picsum.photos/id/1008/50', likes: 95, comments: 20, shares: 8}
        ];

        const postsContainer = document.getElementById('posts');
        let postIndex = 0;

        // Function to render posts
        function renderPosts() {
            posts.slice(postIndex, postIndex + 3).forEach(post => {
                const postElement = document.createElement('div');
                postElement.className = 'neumorphic p-4 transition-all duration-300 hover:scale-105';
                postElement.innerHTML = `
                    <div class="flex items-center mb-2">
                        <img src="${post.avatar}" alt="${post.author}'s avatar" class="w-10 h-10 rounded-full">
                        <div class="ml-4">
                            <h3 class="text-lg font-semibold dark:text-white">${post.author}</h3>
                            <p class="text-sm text-gray-500 dark:text-gray-400">Posted 2 hours ago</p>
                        </div>
                    </div>
                    <p class="dark:text-gray-300 mb-4">${post.content}</p>
                    <div class="flex justify-between items-center dark:text-gray-400">
                        <button class="like-btn flex items-center space-x-1 hover:text-blue-500 transition-colors duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                <path d="M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z" />
                            </svg>
                            <span>${post.likes} Likes</span>
                        </button>
                        <button class="comment-btn flex items-center space-x-1 hover:text-green-500 transition-colors duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M18 5v8a2 2 0 01-2 2h-5l-5 4v-4H4a2 2 0 01-2-2V5a2 2 0 012-2h12a2 2 0 012 2zM7 8H5v2h2V8zm2 0h2v2H9V8zm6 0h-2v2h2V8z" clip-rule="evenodd" />
                            </svg>
                            <span>${post.comments} Comments</span>
                        </button>
                        <button class="share-btn flex items-center space-x-1 hover:text-yellow-500 transition-colors duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                <path d="M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z" />
                            </svg>
                            <span>${post.shares} Shares</span>
                        </button>
                    </div>
                `;
                postsContainer.appendChild(postElement);
            });
            postIndex += 3;
        }

        document.getElementById('loadMoreBtn').addEventListener('click', renderPosts);

        // Initially load a few posts
        renderPosts();

        // Post Comment Modal
        const commentModal = document.getElementById('commentModal');
        const commentInput = document.getElementById('commentInput');
        const submitCommentBtn = document.getElementById('submitCommentBtn');
        const closeCommentModal = document.getElementById('closeCommentModal');

        postsContainer.addEventListener('click', (e) => {
            if (e.target.closest('.comment-btn')) {
                commentModal.classList.remove('hidden');
                gsap.from(commentModal.firstElementChild, {duration: 0.5, y: 50, opacity: 0, ease: "back.out(1.7)"});
            }
        });

        submitCommentBtn.addEventListener('click', () => {
            if (commentInput.value.trim()) {
                alert('Comment submitted: ' + commentInput.value.trim());
                commentInput.value = '';
                commentModal.classList.add('hidden');
            }
        });

        closeCommentModal.addEventListener('click', () => {
            commentModal.classList.add('hidden');
        });

        // Three.js Background Animation
        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        const renderer = new THREE.WebGLRenderer({ alpha: true });
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.getElementById('canvas-container').appendChild(renderer.domElement);

        const geometry = new THREE.TorusGeometry(10, 3, 16, 100);
        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00, wireframe: true });
        const torus = new THREE.Mesh(geometry, material);
        scene.add(torus);

        camera.position.z = 30;

        function animate() {
            requestAnimationFrame(animate);
            torus.rotation.x += 0.01;
            torus.rotation.y += 0.01;
            renderer.render(scene, camera);
        }
        animate();

        // GSAP Animations
        gsap.from("#trendingTopics li", {
            duration: 0.5,
            opacity: 0,
            y: 20,
            stagger: 0.1,
            ease: "power2.out"
        });

        gsap.from("#categories span", {
            duration: 0.5,
            opacity: 0,
            scale: 0.5,
            stagger: 0.1,
            ease: "back.out(1.7)"
        });

        // Intersection Observer for post animations
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    gsap.from(entry.target, {
                        duration: 0.5,
                        opacity: 0,
                        y: 50,
                        ease: "power2.out"
                    });
                    observer.unobserve(entry.target);
                }
            });
        }, { threshold: 0.1 });

        // Observe posts as they are added
        const observePosts = () => {
            document.querySelectorAll('#posts > div').forEach(post => {
                observer.observe(post);
            });
        };

        // Call observePosts after rendering posts
        const originalRenderPosts = renderPosts;
        renderPosts = () => {
            originalRenderPosts();
            observePosts();
        };

        // Initial call to observePosts
        observePosts();
    </script>




Issues:
Navigation to Sections: The sections like #home, #dashboard, #profile, and #messages are meant to correspond to homePage, dashboardPage, etc. However, the HTML provided does not have an explicit homePage section. The script is trying to target section IDs like homePage, dashboardPage, but these don't align with what's present.

Default Page Load: The script is configured to display the homePage by default, but the homePage section doesn't exist in the main structure.

Toggle Menu: The mobile menu functionality is hidden until triggered, but there’s no event listener to toggle it open.

CSS and Section Layout: The styling is well structured, but each section (home, dashboard, etc.) needs to be properly linked with IDs, and the JavaScript needs to correctly display/hide sections on click.

Adjustments:
Assign IDs to Sections: Each section should have an ID that corresponds with the navigation links.
Add Default Home Section: You need to ensure that the homePage section exists for the default view when the page is loaded.
Mobile Menu Toggle: I'll add an event listener for the mobile menu to toggle its visibility.




CLS

INPUT "Enter any string: ", S$

' Initialize W$ as an empty string
W$ = ""

' Loop to reverse the string
FOR l = LEN(S$) TO 1 STEP -1
    B$ = MID$(S$, l, 1)
    W$ = W$ + B$
NEXT l

' Compare the original string with the reversed string
IF S$ = W$ THEN
    PRINT "It is a palindrome"
ELSE
    PRINT "It is not a palindrome"
END IF

END
